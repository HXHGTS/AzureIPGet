name: sing-box RainbowSix ip block rule

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  ip-rule-Generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Necessary Tools
        run: |
          sudo apt install -y curl jq wget sed coreutils git

      - name: Download Json
        run: |
          curl -fsSL -A 'firefox/128.0.0.0' 'https://www.microsoft.com/en-us/download/details.aspx?id=56519' | sed -e 's/"/\n/g' | grep ServiceTags_Public_ | grep https | head -n 1 >GetAzureIPRange.txt
          wget -O ServiceTags_Public.json -i GetAzureIPRange.txt
          jq '.values[] | select(.id | test("AzureCloud")) | select(.properties.region | test("japaneast|japanwest|koreacentral|koreasouth")) | .properties.addressPrefixes' ServiceTags_Public.json | grep -v : | sed -e 's/"//g;s/,//g;s/\[//g;s/\]//g;s/{//g;s/}//g;s/ //g' | grep / >ip.txt

      - name: Format Json
        run: |
          ip_cidr=(); while IFS= read -r line; do ip_cidr+=("$line"); done <ip.txt; json_content=$(printf '{"route":{"rules":[{"process_name":["RainbowSix.exe","RainbowSix_Vulkan.exe"],"ip_cidr":[%s],"network":["udp"],"port_range":["3060:3090","6000:6100","10000:10099"],"outbound":"REJECT"}]}}' "$(printf '"%s",' "${ip_cidr[@]}" | sed 's/,$//')"); echo "$json_content" | jq > AzureIPBlock.json

      - name: Configure Git User
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Prepare Data Folder
        run: |
          sudo mkdir -p data
          sudo mv -f ServiceTags_Public.json ip.txt AzureIPBlock.json data
          sudo chown -R $USER:$USER data
          sudo chmod -R 755 data

      - name: Push Files
        run: |
          echo "Force updating repository with local content. . ."
          git checkout -b Release
          sudo git add data
          git commit -m "Update Azure ip data"
          git push --force origin Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
